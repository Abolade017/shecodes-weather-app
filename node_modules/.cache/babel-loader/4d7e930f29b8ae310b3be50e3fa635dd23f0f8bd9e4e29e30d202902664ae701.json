{"ast":null,"code":"import _slicedToArray from \"/Users/tawa/shecodes-weather-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/Users/tawa/shecodes-weather-app/src/Forecast.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport WeatherForecastPreview from \"./WeatherForecastPreview\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Forecast(props) {\n  _s();\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    loaded = _useState2[0],\n    setLoaded = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    forecast = _useState4[0],\n    setForecast = _useState4[1];\n  function weatherForecast(response) {\n    console.log(response.data);\n    setForecast(response.data.daily);\n    setLoaded(true);\n  }\n  if (loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Forecast row\",\n      children: forecast.map(function (day, index) {\n        if (index < 5) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(WeatherForecastPreview, {\n              data: day\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 33\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 29\n          }, this);\n        } else {\n          return null;\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this);\n  } else {\n    var apiKey = \"eac360db5fc86ft86450f3693e73o43f\";\n    var apiUrl = \"https://api.shecodes.io/weather/v1/forecast?query=\".concat(props.city, \"&key=\").concat(apiKey, \"&units=metric\");\n    axios.get(apiUrl).then(weatherForecast);\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }, this);\n  }\n}\n_s(Forecast, \"4TtDIYlhCv1HZqfh4dYxSkSmjAs=\");\n_c = Forecast;\nvar _c;\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"names":["React","useState","axios","WeatherForecastPreview","jsxDEV","_jsxDEV","Forecast","props","_s","_useState","_useState2","_slicedToArray","loaded","setLoaded","_useState3","_useState4","forecast","setForecast","weatherForecast","response","console","log","data","daily","className","children","map","day","index","fileName","_jsxFileName","lineNumber","columnNumber","apiKey","apiUrl","concat","city","get","then","_c","$RefreshReg$"],"sources":["/Users/tawa/shecodes-weather-app/src/Forecast.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\"\nimport WeatherForecastPreview from \"./WeatherForecastPreview\";\n\nexport default function Forecast(props) {\n    const [loaded, setLoaded] = useState(false)\n    const [forecast, setForecast] = useState([])\n    function weatherForecast(response) {\n        console.log(response.data);\n        setForecast(response.data.daily);\n        setLoaded(true);\n    }\n\n    if (loaded) {\n        return (\n            <div className=\"Forecast row\">\n                {forecast.map(function (day, index) {\n                    if (index < 5) {\n                        return (\n                            <div className=\"col\" key={index}>\n                                <WeatherForecastPreview data={day} />\n                            </div>\n                        );\n                    } else {\n                        return null;\n                    }\n                })}\n            </div>)\n    }\n    else {\n        let apiKey = \"eac360db5fc86ft86450f3693e73o43f\"\n        let apiUrl = `https://api.shecodes.io/weather/v1/forecast?query=${props.city}&key=${apiKey}&units=metric`\n        axios.get(apiUrl).then(weatherForecast)\n\n        return <p>loading...</p>\n    }\n}"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,sBAAsB,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,eAAe,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACpC,IAAAC,SAAA,GAA4BR,QAAQ,CAAC,KAAK,CAAC;IAAAS,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAApCG,MAAM,GAAAF,UAAA;IAAEG,SAAS,GAAAH,UAAA;EACxB,IAAAI,UAAA,GAAgCb,QAAQ,CAAC,EAAE,CAAC;IAAAc,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAC5B,SAASG,eAAeA,CAACC,QAAQ,EAAE;IAC/BC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAAC;IAC1BL,WAAW,CAACE,QAAQ,CAACG,IAAI,CAACC,KAAK,CAAC;IAChCV,SAAS,CAAC,IAAI,CAAC;EACnB;EAEA,IAAID,MAAM,EAAE;IACR,oBACIP,OAAA;MAAKmB,SAAS,EAAC,cAAc;MAAAC,QAAA,EACxBT,QAAQ,CAACU,GAAG,CAAC,UAAUC,GAAG,EAAEC,KAAK,EAAE;QAChC,IAAIA,KAAK,GAAG,CAAC,EAAE;UACX,oBACIvB,OAAA;YAAKmB,SAAS,EAAC,KAAK;YAAAC,QAAA,eAChBpB,OAAA,CAACF,sBAAsB;cAACmB,IAAI,EAAEK;YAAI;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC,GADfJ,KAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAE1B,CAAC;QAEd,CAAC,MAAM;UACH,OAAO,IAAI;QACf;MACJ,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EACd,CAAC,MACI;IACD,IAAIC,MAAM,GAAG,kCAAkC;IAC/C,IAAIC,MAAM,wDAAAC,MAAA,CAAwD5B,KAAK,CAAC6B,IAAI,WAAAD,MAAA,CAAQF,MAAM,kBAAe;IACzG/B,KAAK,CAACmC,GAAG,CAACH,MAAM,CAAC,CAACI,IAAI,CAACpB,eAAe,CAAC;IAEvC,oBAAOb,OAAA;MAAAoB,QAAA,EAAG;IAAU;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC5B;AACJ;AAACxB,EAAA,CAhCuBF,QAAQ;AAAAiC,EAAA,GAARjC,QAAQ;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}